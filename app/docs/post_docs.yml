post.get_all_posts:
  tags:
    - Статьи
  summary: Список всех статей
  description: Публичный доступ. Возвращает список всех опубликованных статей.
  responses:
    200:
      description: Успешный ответ
      schema:
        type: array
        items:
          $ref: "#/definitions/Post"

post.get_post_by_id:
  tags:
    - Статьи
  summary: Получить статью по ID
  description: Публичный доступ. Возвращает статью по её идентификатору.
  parameters:
    - name: post_id
      in: path
      required: true
      type: integer
      description: ID статьи
  responses:
    200:
      description: Успешный ответ
      schema:
        $ref: "#/definitions/Post"
    404:
      description: Статья не найдена

post.create_post:
  tags:
    - Статьи
  summary: Создать статью
  description: Только для авторизованных пользователей с ролью `teacher`.
  security:
    - Bearer: []
  parameters:
    - in: body
      name: body
      required: true
      schema:
        type: object
        required:
          - title
          - content
        properties:
          title:
            type: string
            example: "Как писать документацию"
          content:
            type: string
            example: "В этом посте мы рассмотрим..."
  responses:
    201:
      description: Статья успешно создана
      schema:
        $ref: "#/definitions/Post"
    400:
      description: Ошибка валидации
    401:
      description: Требуется авторизация
    403:
      description: Доступ запрещён — только для teacher

post.update_post:
  tags:
    - Статьи
  summary: Обновить статью
  description: Доступно только автору статьи или администратору.
  security:
    - Bearer: []
  parameters:
    - name: post_id
      in: path
      required: true
      type: integer
      description: ID статьи для обновления
    - in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          title:
            type: string
            example: "Обновлённый заголовок"
          content:
            type: string
            example: "Обновлённый текст статьи"
  responses:
    200:
      description: Статья успешно обновлена
      schema:
        $ref: "#/definitions/Post"
    401:
      description: Требуется авторизация
    403:
      description: Недостаточно прав (не автор или не админ)
    404:
      description: Статья не найдена

post.delete_post:
  tags:
    - Статьи
  summary: Удалить статью
  description: Доступно только автору статьи или администратору.
  security:
    - Bearer: []
  parameters:
    - name: post_id
      in: path
      required: true
      type: integer
      description: ID статьи для удаления
  responses:
    200:
      description: Статья успешно удалена
      schema:
        type: object
        properties:
          msg:
            type: string
            example: "Пост удален"
    401:
      description: Требуется авторизация
    403:
      description: Недостаточно прав (не автор или не админ)
    404:
      description: Статья не найдена